{"version":3,"sources":["components/Todo.js","actions/index.js","App.js","reportWebVitals.js","reducers/reducer.js","reducers/index.js","store.js","index.js"],"names":["Todo","useState","inputData","setInputData","list","useSelector","state","reducer","console","log","dispatch","useDispatch","className","type","placeholder","value","onChange","event","target","onClick","data","payload","id","Date","getTime","toString","map","lm","title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialData","action","newList","filter","element","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMA2CeA,EAvCF,WAEX,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQH,QAClDI,QAAQC,IAAI,WAAWL,GACvB,IAAMM,EAAWC,cACf,OACI,mCACE,qBAAKC,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACI,iCACA,sEAGA,sBAAKA,UAAU,WAAf,UACA,uBAAOC,KAAK,OAAOC,YAAY,eAAeC,MAAOb,EAAWc,SAAU,SAACC,GAAD,OAAWd,EAAac,EAAMC,OAAOH,UAC/G,mBAAGH,UAAU,qBAAqBO,QAAS,kBAAMT,GCpBzCU,EDoB0DlB,ECnBvE,CACHW,KAAM,WACNQ,QAAQ,CACJC,IAAI,IAAIC,MAAOC,UAAUC,WACzBL,KAAMA,KDe4EjB,EAAa,KCpBpF,IAACiB,QDsBR,qBAAKR,UAAU,YAAf,SAEIR,EAAKsB,KAAI,SAAAC,GACP,OACE,sBAAKf,UAAU,WAAf,UACE,6BAAKe,EAAGP,OACR,mBAAGR,UAAU,2BAA2BgB,MAAM,cAAcT,QAAS,kBAAMT,EClB1F,CACHG,KAAM,cACNQ,QAAS,CACLD,KDe6GO,UAFlEA,EAAGL,SAQ1C,qBAAKV,UAAU,YAAf,SACE,wBAAQA,UAAU,eAAe,oBAAkB,aAAaO,QAAS,kBAAMT,EClBxD,CAACG,KAAM,iBDkB9B,SAAuG,0DEzB1GgB,EAPH,WACV,OACE,mCACA,cAAC,EAAD,OCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sBCPRQ,EAAc,CAChBnC,KAAK,IAmCMG,EAjCC,WAAkC,IAAjCD,EAAgC,uDAAxBiC,EAAaC,EAAW,uCAC7C,OAAOA,EAAO3B,MACV,IAAK,WACG,MAAmB2B,EAAOnB,QAAnBC,EAAP,EAAOA,GAAIF,EAAX,EAAWA,KACX,OAAO,2BACAd,GADP,IAEIF,KAAK,GAAD,mBACGE,EAAMF,MADT,CAEA,CACIkB,KACAF,YAKZ,IAAK,cACD,IAAMqB,EAAUnC,EAAMF,KAAKsC,QAAO,SAACC,GAAD,OAAaA,EAAQrB,KAAOkB,EAAOnB,QAAQD,KAAKE,MAClF,OAAO,2BACAhB,GADP,IAEIF,KAAKqC,IAGb,IAAK,cAED,OAAO,2BACAnC,GADP,IAEIF,KAAK,KAGrB,QACI,OAAOE,IC5BJsC,EAFKC,YAAgB,CAACtC,YCCtBuC,EADDC,YAAYH,EAAYI,OAAOC,8BAAgCD,OAAOC,gCCIpFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACA,cAAC,EAAD,QAGFO,SAASC,eAAe,SAM1BxB,M","file":"static/js/main.ff447179.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTodo, deleteTodo, removeTodo } from '../actions/index';\nimport \"./todo.css\";\nconst Todo = () => {\n\n  const [inputData, setInputData] = useState(\"\");\n  const list = useSelector((state) => state.reducer.list)\n  console.log(\"list get\",list);\n  const dispatch = useDispatch();\n    return( \n        <>\n          <div className=\"main-div\">\n            <div className=\"child-div\">\n                <figure>\n                <figcaption>Add your list here! âœŒ</figcaption>\n                </figure>\n\n                <div className=\"addItems\">\n                <input type=\"text\" placeholder=\"Add items...\" value={inputData} onChange={(event) => setInputData(event.target.value)}></input>\n                <i className=\"fa fa-plus add-btn\" onClick={() => dispatch(addTodo(inputData), setInputData(\"\"))}></i>\n                </div>\n                <div className=\"showItems\">\n                  {\n                    list.map(lm => {\n                      return (\n                        <div className=\"eachItem\" key={lm.id}>\n                          <h3>{lm.data}</h3>\n                          <i className=\"far fa-trash-alt add-btn\" title=\"Delete Item\" onClick={() => dispatch(deleteTodo(lm))}></i>\n                        </div>\n                        )\n                    })\n                  }\n                </div>\n                <div className=\"showItems\">\n                  <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={() => dispatch(removeTodo())}><span>Check List</span></button>\n                </div>\n            </div>\n          </div>  \n        </> \n    )\n}\n \nexport default Todo;","export const addTodo = (data) => {\n    return {\n        type: 'ADD_TODO',\n        payload:{\n            id: new Date().getTime().toString(),\n            data: data\n        }\n    }\n}\nexport const deleteTodo = (data) => {\n    return {\n        type: 'DELETE_TODO',\n        payload: {\n            data: data\n        }\n    } \n}\nexport const removeTodo = () => { return {type: 'REMOVE_TODO'} }\n","import React from 'react';\nimport Todo from './components/Todo';\n\nconst App = () => {\n  return (\n    <>\n    <Todo />\n    </>\n  )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialData = {\n    list:[]\n}\nconst reducer = (state = initialData, action) => {\n    switch(action.type) {\n        case \"ADD_TODO\":\n                const {id, data} = action.payload;\n                return {\n                    ...state,\n                    list:[\n                        ...state.list,\n                        {\n                            id,\n                            data\n                        }\n                    ]\n                }\n                break;\n                case \"DELETE_TODO\":\n                    const newList = state.list.filter((element) => element.id !== action.payload.data.id);\n                    return {\n                        ...state,\n                        list:newList\n                    }\n                break;\n                case \"REMOVE_TODO\":\n                    // return (state = initialData);\n                    return {\n                        ...state,\n                        list:[]\n                    }\n                break;\n        default:\n            return state;\n    }\n}\nexport default reducer;","import { combineReducers } from 'redux';\nimport reducer from './reducer';\n\nconst rootReducer = combineReducers({reducer});\n\nexport default rootReducer;","import { createStore } from 'redux';\nimport rootReducer from \"./reducers/index\";\n\nconst store = createStore(rootReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}